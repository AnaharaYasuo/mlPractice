import numpy as np
from scipy import sparse
from scipy import linalg

if __name__ == "__main__":
    print(np.exp(2))  # eのべき乗
    print(np.log(np.e))  # 対数
    print(np.sin(np.pi))
    print(np.sqrt(2))
    a = np.array([2, 3, 4, 6])
    print(a[0])
    print(a[:])
    b = np.arange(3)
    print(b)
    c = np.arange(1, 3, 0.1)
    print(c)
    d = np.array([1, 2, 4, 67, 0], dtype=np.float)
    print(d)
    e = np.arange(5.)
    print(e)
    
    a = np.array([[2, 3, 4], [5, 6, 7]], dtype=np.float64)
    print(a)
    print(np.array([a[0, 0], a[1, 1]]).dtype)
    print(a[:, 1])
    print(a[1, :])
    print(a[0, 1:])
    
    a = np.arange(15.).reshape(3, 5)
    print(a)
    print(a.shape)
    print(a.ndim)
    print(a.size)
    b = np.arange(4.)
    print(b.shape)
    print(b.ndim)
    a = np.arange(16.)
    c = a.reshape(4, -1)
    print(c)
    print(c.ravel())
    b = np.arange(4.)
    print(b)
    print(b.reshape(-1, 1))
    print(b[:, np.newaxis])
    print(b[:, ])
    print(b[:, None])
    print(b.reshape(1, -1))
    print(b[np.newaxis, :])
    a = np.zeros((3, 4))
    print(a)
    print(a.ravel())
    b = np.ones((2, 2), dtype=np.float64)
    print(b)
    c = np.empty((2, 5))
    print(c)
    d = np.linspace(0, 0.99, 100)
    print(d)
    print(d.reshape(10, -1))
    a = np.arange(0, 6)
    print(a)
    a = a.reshape(2, -1)
    print(a)
    b = np.arange(6, 12).reshape(2, -1)
    print(b)
    print(np.r_[a, b])
    print(np.c_[a, b])
    c = np.arange(3)
    d = np.arange(3, 6)
    print(np.r_[c, d])
    print(np.c_[c, d])
    print(np.r_[a, c.reshape(1, -1)])
    
    a = np.arange(5.)
    print(a)
    print(np.sum(a))
    print(np.mean(a))
    print(np.max(a))
    print(a.max())
    print(a.min())
    
    b = np.arange(9.).reshape(3, -1)
    print(np.sum(b))
    print(b.sum())
    print(b.sum(axis=0))
    print(b.sum(axis=1))
    print(b.mean(axis=0))
    a = np.arange(3., 8.)
    print(a)
    print(np.exp(a))
    print(np.log(a))
    print(np.sqrt(a))
    b = np.arange(9.).reshape(3, -3)
    print(np.exp(b))
    
    a = np.arange(-1.01, 5.)
    print(a + 3)
    print(a - 3)
    print(a * 3)
    print(a * 3 - 3)
    print(a / 3)
    print(a * a / 3)
    print(a ** 2 * a)
    print(a > a ** 3)
    
    b = np.arange(9).reshape(3, -1)
    print(np.arange(9).reshape(3, -1))
    print(b > 3)
    
    a = np.array([1, 2, 3, 4])
    b = np.array([True, False, True, False])
    print(a[b])
    print(a[b].reshape(2, -1))
    
    a = np.arange(10.)
    print(a[a > 5])
    print(a[(a > 1) & (a <= 3)])
    print(a[(a > 4) | (a <= 2)].reshape(2, -1))
    u = np.arange(3.)
    v = np.arange(4, 7.)
    print(u + v)
    print(np.dot(u, v))
    print(u * v)
    a = np.arange(1., 10).reshape(3, -1)
    b = np.arange(4., 13, 1).reshape(-1, 3)
    print(a * b)
    print(a / b)
    print(np.dot(a, b))
    print((a * b).sum())
    a = np.arange(12.).reshape(3, -1)
    b = np.arange(0, 4, 1)
    print(a + b)
    
    a = sparse.lil_matrix((4, 5))
    print(a)
    a[0, 0] = 1
    a[0, 1] = 1
    print(a)
    print(a.toarray())
    b = sparse.lil_matrix((5, 4))
    b[1, 0] = 1
    b[0, 1] = 2
    b[0, 2] = 3
    print(b.toarray())
    c = a.dot(b).toarray()
    print(c)
    a1 = a.tocsr()
    a2 = a.tocsc()
    print(a1)
    print(a2)
    b1 = b.tocsr()
    b2 = b.tocsc()
    print(a1.dot(b1).toarray())
    print(a1.dot(b2).toarray())
    print(a2.dot(b1).toarray())
    print(type(b1))
    print(type(b2))
    
    a = np.array([[3, 1, 1], [1, 2, 1], [0, -1, 1]])
    print(np.linalg.inv(a))
    b = np.array([1, 2, 3])
    print(np.linalg.solve(a, b))
    print(np.linalg.inv(a).dot(b))
    lu, p = linalg.lu_factor(a)
    print(lu)
    print(linalg.lu_solve((lu, p), b))
    
    print(np.random.rand())
    print(np.random.rand(3, 2))
    print(np.random.rand(5))
    print(np.random.randint(5))
    print(np.random.randint(5, size=(2, 5)))
    
    np.random.seed(10)
    print(np.random.rand(5))

    x = np.arange(1, 4)
    y = np.arange(4, 7)
    xmesh, ymesh = np.meshgrid(x, y)
    print(xmesh)
    print(ymesh)
